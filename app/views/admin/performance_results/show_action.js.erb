(function(){
	var parent = app.dashboard.performance_result;
	var el = parent.show = {};
	$.extend(el, {
		parent: parent,
		root: null,
		view: null,
		lang: null,
		config: null,
		container: null,
		element: <%= @performance_result.to_json.html_safe %>,
		init: function(){
			this.initRoot();
			this.initView();
			this.initLang();
			this.initConfig();
			this.initContainer();
		},
		initViews: function(){
			this.initGeneralView();
			this.initStreetView();
		},
		initStreetView: function(){
			var view = this.getViewBase('street');
			$.extend(view, {
				init: function(){
					this.render();
				}
			});
			view.init();
		},
		initGeneralView: function(){
			var view = this.getViewBase('general');
			$.extend(view, {
				init: function(){
					this.render();
				}
			});
			view.init();
		},
		getViewBase: function(key){
			var view = {};
			$.extend(view, {
				parent: this,
				root: null,
				view: null,
				key: key,
				container: null,
				val: null,
				init: function(){
					this.initRoot();
					this.initView();
					this.initVal();
					this.initContainer();
				},
				initVal: function(){
					this.val = config.val;
				},
				render: function(){
					var _self = this;
					var element = this.view.element;
					var categories = [];
					var data = [];
					var fields = this.view.lang[this.key + '_fields'];
					var container = this.container.find('.performance_result_show_chart');
					var chart_opts = this.view.config.chart;
					$.each(fields, function(key, val){
						var field_name = val.field + '_time';
						data.push(element[field_name] / _self.val.usec_sec);
						categories.push(val.name);
					});
					this.root.plugins.highcharts(container,  
						$.extend({
							series: [{
								data: data
							}],
							xAxis: {
								categories: categories,
								labels: {
									rotation: -45,
									align: 'right'
								}
							}
						}, chart_opts)
					);
				},
				initContainer: function(){
					this.container = this.view.container.find('#performance_result_show_' + this.key);
				},
				initRoot: function(){
					this.root = this.parent.root;
				},
				initView: function(){
					this.view = this.parent.view;
				}
			});
			view.init();
			return view;
		},
		initContainer: function(){
			this.container = this.root.dashboard.container.find('#performance_result_show_container');
			this.initViews();
			this.initBackBtn();
		},
		initBackBtn: function(){
			var _self = this;
			var back_btn = this.container.find('#performance_result_cancel_btn');
			back_btn.click(function(e){
				e.preventDefault();
				_self.backBtnOnClick(e, $(this));
			});
		},
		backBtnOnClick: function(e, element){
			this.root.view_stack.popView();
		},
		initRoot: function(){
			this.root = this.parent.root;
		},
		initView: function(){
			this.view = this;
		},
		initLang: function(){
			this.lang = lang.views.performance_result.show;
		},
		initConfig: function(){
			this.config = config.views.performance_result.show;
		}
	});
	el.init();
})(jQuery);